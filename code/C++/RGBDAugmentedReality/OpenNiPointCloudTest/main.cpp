#include "MainApp.h"

MainApp* app;

int main(int argc, char* argv[]) {
	app = new MainApp;
	app->runApp(argc, argv);
	delete app;
	
	/*
	cv::FileStorage fs("../../Data/asus_rig_params.xml", cv::FileStorage::WRITE);
	if (!fs.isOpened()) {
		cout << "The file could not be opened for writing." << endl;
		return -1;
	}
	cv::Mat K1 = (cv::Mat_<double>(3,3) <<
				566.011656388832990, 0.000000000000000, 330.047995877662000, 
				0.000000000000000, 566.819922288784030, 221.942599670183000, 
				0.000000000000000, 0.000000000000000, 1.000000000000000);
	cv::Mat K2 = (cv::Mat_<double>(3,3) <<
				563.124279401209040, 0.000000000000000, 326.750878770104010, 
				0.000000000000000, 564.446832050045030, 230.399691352704990, 
				0.000000000000000, 0.000000000000000, 1.000000000000000);
	cv::Mat D1 = (cv::Mat_<double>(5,1) << 0.069127786624489, -0.130572234565533, -0.005343839074884, 0.003681474196896, 0.000000000000000);
	cv::Mat D2 = (cv::Mat_<double>(5,1) << 0.063984354416992, -0.133089282144516, -0.003881255895174, 0.001779857403127, 0.000000000000000);

	cv::Mat RT = (cv::Mat_<double>(4,4) <<
				0.999589873565546, -0.010318374979644, -0.026713588358656, 2.555976619763713,
				-0.006784376635634, 0.820948366329898, -0.570962128388510, -99.803391135011850,
				0.027821878061736, 0.570909196771300, 0.820541669961414, -84.779578605854041,
				0.0, 0.0, 0.0, 1.0);

	fs << "K1" << K1;
	fs << "K2" << K2;
	fs << "D1" << D1;
	fs << "D2" << D2;
	fs << "RT" << RT;

	fs.release();
	*/

	return 0;
}

void timerGL(int t) {
	app->timer(t);
}

void displayGL() {
	app->display();
}

void reshapeGL(int w, int h) {
	app->reshape(w, h);
}

void idleGL() {
	app->acquirePoints();
}